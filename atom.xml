<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>iFan</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-06-07T08:59:20.227Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>iFan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>linux部署GitHub、hexo博客</title>
    <link href="http://example.com/2021/06/07/1.GitHub%E9%83%A8%E7%BD%B2hexo%E5%8D%9A%E5%AE%A2/"/>
    <id>http://example.com/2021/06/07/1.GitHub%E9%83%A8%E7%BD%B2hexo%E5%8D%9A%E5%AE%A2/</id>
    <published>2021-06-07T08:59:20.227Z</published>
    <updated>2021-06-07T08:59:20.227Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="linux部署GitHub、hexo博客"><a href="#linux部署GitHub、hexo博客" class="headerlink" title="linux部署GitHub、hexo博客"></a>linux部署GitHub、hexo博客</h1><h4 id="实验目标"><a href="#实验目标" class="headerlink" title="实验目标:"></a>实验目标:</h4><p><strong>学会GitHub部署hexo<br>掌握GitHub基本应用<br>熟练使用hexo</strong></p><h2 id="hexo简介"><a href="#hexo简介" class="headerlink" title="hexo简介"></a>hexo简介</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h3 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h3><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：  </p><ul><li>Node.js (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)  </li><li>Git</li></ul><h3 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h3><p>1.安装Git<br>2.安装Node.js<br>3.安装Hexo<br>4.GitHub创建个人仓库<br>5.生成SSH添加到GitHub<br>6.将hexo部署到GitHub<br>7.GitHub源文件推送命令</p><h2 id="linux部署"><a href="#linux部署" class="headerlink" title="linux部署"></a>linux部署</h2><h3 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1.安装Git"></a>1.安装Git</h3><p>git是目前世界上最先进的分布式版本控制系统</p><p>众所周知，1991年linus编写并开源了Linux操作系统，一直到2002年，linux的前进发展都是世界各地的志愿者把源代码文件通过diff的方式发给linus，然后linus本人通过手工方式合并代码。</p><p>Git最早就是在linux上编写的，直接yum安装</p><blockquote><p><strong>yum install -y git</strong><br>查看版本：<code>git --version</code></p></blockquote><h3 id="2-安装Node-js"><a href="#2-安装Node-js" class="headerlink" title="2.安装Node.js"></a>2.安装Node.js</h3><p>简单的说 Node.js 就是运行在服务端的 JavaScript。<br>Node.js 是一个基于Chrome JavaScript 运行时建立的一个平台。<br>Node.js是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。</p><p>Hexo是基于node.js编写的，所以要安装node.js和npm  </p><ul><li>下载node.js已编译好的包并解压</li></ul><blockquote><p><strong>wget <a href="https://nodejs.org/dist/v10.9.0/node-v10.9.0-linux-x64.tar.xz">https://nodejs.org/dist/v10.9.0/node-v10.9.0-linux-x64.tar.xz</a></strong>  </p><p><strong>tar xf node-v10.9.0-linux-x64.tar.xz</strong> &nbsp;//解压 </p></blockquote><ul><li>通过ln命令设置软链接(创建了软链接才能全局使用npm和node命令)</li></ul><blockquote><p><strong>ln -s /usr/software/nodejs/bin/npm &nbsp;/usr/local/bin</strong><br><strong>ln -s /usr/software/nodejs/bin/node &nbsp;/usr/local/bin/</strong><br>查看node.js版本：<code>node -v</code><br>查看npm版本：<code>npm -v</code></p></blockquote><p>node.js版本问题，请查看安装前提</p><ul><li>升级node.js</li></ul><p>首先，使用npm全局下载一个管理node.js版本的管理模板n </p><blockquote><p><strong>npm i -g n –force</strong><br><strong>ln -s /usr/software/nodejs/bin/n &nbsp;/usr/local/bin/</strong> </p></blockquote><p>安装最新版本</p><blockquote><p><strong>n latest</strong></p></blockquote><p>安装稳定版本</p><blockquote><p><strong>n stable</strong></p></blockquote><p>删除v14.17.0版本</p><blockquote><p><strong>n rm v14.17.0</strong>  </p></blockquote><p>切换版本</p><blockquote><p><strong>n</strong></p></blockquote><p>注:升级版本或切换版本后需重启虚拟机后，再查版本才能显示更换后的node.js和npm的版本号。</p><h3 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h3><p>git和node.js安装好后，就可以开始安装hexo。  </p><ul><li>全局安装hexo工具</li></ul><blockquote><p><strong>npm install -g hexo-cli</strong><br>查看hexo版本：<code>hexo -v</code></p></blockquote><p>至此安装部分就完了。</p><ul><li>初始化hexo(blog是文件夹名称，可以自定义)</li></ul><blockquote><p><strong>hexo init blog</strong></p></blockquote><p>进入blog文件夹</p><blockquote><p><strong>npm install</strong></p></blockquote><p>初始完成后，blog文件夹下有：  </p><ul><li>node_modules: 依赖包  </li><li>public：存放生成的页面  </li><li>scaffolds：生成文章的一些模板  </li><li>source：用来存放你的文章  </li><li>themes：主题  </li><li>_config.yml: 博客的配置文件</li></ul><p>hexo 基础命令：</p><blockquote><p>生成静态文件：<code>hexo generate</code><br>启动服务器(默认情况下，访问网址为：<a href="http://localhost:4000/)%EF%BC%9A%60hexo">http://localhost:4000/)：`hexo</a> server<code>   部署网站：</code>hexo deploy<code>   清除缓存文件 (db.json) 和已生成的静态文件 (public)：</code>hexo clean`</p></blockquote><h3 id="4-GitHub创建个人仓库"><a href="#4-GitHub创建个人仓库" class="headerlink" title="4.GitHub创建个人仓库"></a>4.GitHub创建个人仓库</h3><p>首先，你先要有一个GitHub账户，，没有就注册一个。<br>注册完登录后，在GitHub.com中看到一个New repository，新建仓库，仓库名为<u><strong>用户名.github.io.git</strong></u>，这样部署到GitHub page的时候才能被识别。<br>点击create repository。</p><h3 id="5-生成SSH添加到GitHub"><a href="#5-生成SSH添加到GitHub" class="headerlink" title="5.生成SSH添加到GitHub"></a>5.生成SSH添加到GitHub</h3><p>配置GitHub用户名和邮箱</p><blockquote><p><strong>git config –global user.name “user_name”</strong>  </p></blockquote><blockquote><p><strong>git config –global user.email “user_email”</strong></p></blockquote><p>注：user_name是GitHub用户名，user_email是你GitHub的邮箱</p><p>检查GitHub用户名和邮箱是否有误</p><blockquote><p><strong>git config user.name</strong><br><strong>git config user.email</strong></p></blockquote><p>或</p><blockquote><p><strong>git config -l</strong></p></blockquote><p>创建SSH密钥对(一直回车)</p><blockquote><p><strong>ssh-keygen -t rsa -C “user_email”</strong></p></blockquote><p>查看是否创建成功</p><blockquote><p><strong>ssh -T <a href="mailto:&#x67;&#x69;&#x74;&#64;&#x67;&#x69;&#116;&#104;&#117;&#98;&#46;&#99;&#111;&#109;">&#x67;&#x69;&#x74;&#64;&#x67;&#x69;&#116;&#104;&#117;&#98;&#46;&#99;&#111;&#109;</a></strong></p></blockquote><h3 id="6-将hexo部署到GitHub"><a href="#6-将hexo部署到GitHub" class="headerlink" title="6.将hexo部署到GitHub"></a>6.将hexo部署到GitHub</h3><ul><li>将hexo和GitHub关联起来，编辑**_config.yml**</li></ul><blockquote><p>deploy:<br>  &nbsp;&nbsp; type: git<br>  &nbsp;&nbsp; repo: <a href="mailto:&#x67;&#105;&#116;&#x40;&#x67;&#105;&#x74;&#x68;&#117;&#98;&#46;&#99;&#x6f;&#109;">&#x67;&#105;&#116;&#x40;&#x67;&#105;&#x74;&#x68;&#117;&#98;&#46;&#99;&#x6f;&#109;</a>:githubName/githubName.github.io<br>&nbsp;&nbsp; branch: master</p></blockquote><p>注：repo就是你GitHub仓库的SSH协议链接</p><ul><li>安装deploy-git，这样才能部署到GitHub</li></ul><blockquote><p><strong>npm install hexo-deployer-git –save</strong>  </p></blockquote><ul><li>开始部署html网页</li></ul><blockquote><p><strong>hexo clean<br>hexo generate<br>hexo deploy</strong></p></blockquote><p>修改主题后启动如果报如下错误：<br>extends includes/layout.pug block content include includes/recent-posts.pug include includes/partial </p><p>执行如下命令可解决：</p><blockquote><p><strong>npm install –save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</strong></p></blockquote><h3 id="7-GitHub源文件推送命令"><a href="#7-GitHub源文件推送命令" class="headerlink" title="7.GitHub源文件推送命令"></a>7.GitHub源文件推送命令</h3><p>由于hexo d上传部署到GitHub的是hexo编译后的文件，不包括源文件，所以如果你想把源文件也推送到GitHub仓库进行保存，那我们就可以在GitHub上创建另一个分支，并进行源文件的推送。</p><ul><li>创建分支</li></ul><p><img src="/images/2021-6-1/1.png" alt="image"></p><p>然后在仓库的setting中，设置新建的分支为默认分支。  </p><ul><li>同步仓库至本地</li></ul><p>再到linux虚拟机中在本地任意目录下，把GitHub新建的分支同步到本地(将新建分支设置为默认分支，所以就可以直接git clone，否则要指定分支名称)</p><blockquote><p><strong>git clone <a href="mailto:&#x67;&#x69;&#116;&#64;&#x67;&#x69;&#x74;&#x68;&#x75;&#98;&#46;&#x63;&#111;&#x6d;">&#x67;&#x69;&#116;&#64;&#x67;&#x69;&#x74;&#x68;&#x75;&#98;&#46;&#x63;&#111;&#x6d;</a>:user_name/user_name.github.io.git</strong></p></blockquote><ul><li>推送源文件至GitHub仓库</li></ul><blockquote><p><strong>git add .</strong>  &nbsp;&nbsp;//添加文件到版本库（只是添加到缓存区），.代表添加文件夹下所有文件<br><strong>git commit -m “add branch”</strong><br><strong>git push</strong>   &nbsp;&nbsp;//推送至仓库</p></blockquote><p>执行完以上命令后，稍等一会，浏览器访问<u><a href="https://user_name.github.io/">https://user_name.github.io/</a></u>就可以看到你部署的博客网站了。</p><hr><p>到此为止本篇部署教程就结束了，hexo有很多精美的主题，可以自行去官网<a><a href="https://hexo.io/themes/">https://hexo.io/themes/</a></a>套用就行了，非常简便。<br>在此推荐初学者去Jerry大佬的博客首页<a><a href="https://butterfly.js.org/">https://butterfly.js.org/</a></a>仔细查阅《Butterfly 安裝文檔(一) 快速開始》,学习更加精细的hexo主题设置。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/05/31/hello-world/"/>
    <id>http://example.com/2021/05/31/hello-world/</id>
    <published>2021-05-31T13:00:29.550Z</published>
    <updated>2021-05-31T13:00:29.550Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
</feed>
